// ***********************************************************************
// Assembly         : KsWare.SignatureGenerator
// Author           : SchreinerK
// Created          : 03-26-2018
//
// Last Modified By : SchreinerK
// Last Modified On : 03-27-2018
// ***********************************************************************
// <copyright file="EventSignatureGenerator.cs" company="KsWare">
//     Copyright © 2018 KsWare. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System.Reflection;
using System.Text;

namespace KsWare.SignatureGenerator.Generators {

	/// <summary>
	/// Class EventSignatureGenerator.
	/// </summary>
	/// <seealso cref="KsWare.SignatureGenerator.Generators.BaseSignatureGenerator" />
	/// <autogeneratedoc />
	public class EventSignatureGenerator : BaseSignatureGenerator {


		/// <summary>
		/// Initializes a new instance of the <see cref="EventSignatureGenerator"/> class.
		/// </summary>
		/// <param name="signatureHelper">The signature helper.</param>
		/// <autogeneratedoc />
		public EventSignatureGenerator(SignatureHelper signatureHelper) : base(signatureHelper) { }


		/// <summary>
		/// Creates signature for the specified event information.
		/// </summary>
		/// <param name="eventInfo">The event information.</param>
		/// <returns>System.String.</returns>
		public string Sig(EventInfo eventInfo) => Sig(eventInfo, EventSignatureOptions.Create(SignatureMode));

		/// <summary>
		/// Creates signature for the specified event information.
		/// </summary>
		/// <param name="eventInfo">The event information.</param>
		/// <param name="options">The signature options.</param>
		/// <returns>System.String.</returns>
		public string Sig(EventInfo eventInfo, EventSignatureOptions options) {
			var sb = new StringBuilder();
			var mi = eventInfo.AddMethod; // TODO

			sb.Append($"{SignatureHelper.Sig(mi.Attributes)}");
			sb.Append("event ");
			sb.Append($"{eventInfo.EventHandlerType} ");
			sb.Append($"{eventInfo.Name}");

			return sb.ToString();
		}
	}
}
