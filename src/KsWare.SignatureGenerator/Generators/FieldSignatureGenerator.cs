// ***********************************************************************
// Assembly         : KsWare.SignatureGenerator
// Author           : SchreinerK
// Created          : 03-26-2018
//
// Last Modified By : SchreinerK
// Last Modified On : 03-27-2018
// ***********************************************************************
// <copyright file="FieldSignatureGenerator.cs" company="KsWare">
//     Copyright © 2018 KsWare. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System.Reflection;
using System.Text;

namespace KsWare.SignatureGenerator.Generators {

	/// <summary>
	/// Class FieldSignatureGenerator.
	/// </summary>
	/// <seealso cref="KsWare.SignatureGenerator.Generators.BaseSignatureGenerator" />
	/// <seealso cref="BaseSignatureGenerator" />
	/// <autogeneratedoc />
	public class FieldSignatureGenerator : BaseSignatureGenerator {

		/// <summary>
		/// Initializes a new instance of the <see cref="FieldSignatureGenerator" /> class.
		/// </summary>
		/// <param name="signatureHelper">The signature helper.</param>
		/// <autogeneratedoc />
		public FieldSignatureGenerator(SignatureHelper signatureHelper) : base(signatureHelper) { }

		/// <summary>
		/// Creates signature for the specified field information.
		/// </summary>
		/// <param name="fieldInfo">The field information.</param>
		/// <returns>System.String.</returns>
		public string Sig(FieldInfo fieldInfo) => Sig(fieldInfo, FieldSignatureOptions.Create(SignatureMode));

		/// <summary>
		/// Creates signature for the specified field information.
		/// </summary>
		/// <param name="fieldInfo">The field information.</param>
		/// <param name="options">The signature options.</param>
		/// <returns>System.String.</returns>
		public string Sig(FieldInfo fieldInfo, FieldSignatureOptions options) {
			var sb = new StringBuilder();

			sb.Append($"{SignatureHelper.Sig(fieldInfo.Attributes)}");
			sb.Append(SignatureHelper.Sig(fieldInfo.FieldType));
			sb.Append(" ");
			sb.Append(fieldInfo.Name);

			return sb.ToString();
//			return $"field {fieldInfo} // not implemented";
		}

		
	}
}
