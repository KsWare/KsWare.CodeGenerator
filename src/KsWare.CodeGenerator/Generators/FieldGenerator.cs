// ***********************************************************************
// Assembly         : KsWare.CodeGenerator
// Author           : SchreinerK
// Created          : 03-26-2018
//
// Last Modified By : SchreinerK
// Last Modified On : 03-27-2018
// ***********************************************************************
// <copyright file="FieldSignatureGenerator.cs" company="KsWare">
//     Copyright © 2018 KsWare. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using System.Reflection;
using System.Text;

namespace KsWare.CodeGenerator.Generators {

	/// <summary>
	/// Class FieldSignatureGenerator.
	/// </summary>
	/// <seealso cref="BaseGenerator" />
	/// <seealso cref="BaseGenerator" />
	/// <autogeneratedoc />
	public class FieldGenerator : BaseGenerator {

		/// <summary>
		/// Initializes a new instance of the <see cref="FieldGenerator" /> class.
		/// </summary>
		/// <param name="generator">The generator.</param>
		/// <autogeneratedoc />
		public FieldGenerator(Generator generator) : base(generator) { }

		/// <summary>
		/// Generates code for the specified field information.
		/// </summary>
		/// <param name="fieldInfo">The field information.</param>
		/// <returns>System.String.</returns>
		public string Generate(FieldInfo fieldInfo) => Generate(fieldInfo, FieldGeneratorOptions.Create(GeneratorMode));

		/// <summary>
		/// Generates code for the specified field information.
		/// </summary>
		/// <param name="fieldInfo">The field information.</param>
		/// <param name="options">The generator options.</param>
		/// <returns>System.String.</returns>
		public string Generate(FieldInfo fieldInfo, FieldGeneratorOptions options) {
			var sb = new StringBuilder();

			if (options.Access   ) sb.Append(Generator.SigAccess((MethodAttributes) fieldInfo.Attributes));
			if (options.Modifiers) sb.Append(Generator.SigModifier(fieldInfo.Attributes));
			if (options.Type     ) sb.Append(Generator.Generate(fieldInfo.FieldType)+ " ");
			if (options.Name     ) sb.Append(fieldInfo.Name);
			//TODO Value;

			return sb.ToString();
		}

		
	}
}
